name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        settings:
          - platform: "ubuntu-22.04"
            args: ""
          # - platform: 'macos-latest'
          #   args: '--target universal-apple-darwin'
          # - platform: 'macos-latest'
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest'
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'windows-latest'
          #   args: '--target x86_64-pc-windows-msvc'
          # - platform: 'windows-latest'
          #   args: '--target i686-pc-windows-msvc'
          # - platform: 'windows-latest'
          #   args: '--target aarch64-pc-windows-msvc --bundles nsis'

    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: List targets
        run: rustup target list

      - name: Install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./packages/src-tauri -> target"
          cache-on-failure: true

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn" # Set this to npm, yarn or pnpm.

      - name: Set yarn version
        run: yarn set version 4.2.2

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: yarn install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: "--max_old_space_size=4096"

        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: "App v__VERSION__" # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false
          #includeDebug: true
          args: ${{ matrix.settings.args }}
